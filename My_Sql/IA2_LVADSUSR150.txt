1ans)
select machine_id 
from l1_maintenance_records
where monthname(maintenance_date)='march' and year(maintenance_date)='2024'
and cost > (select avg(cost)
	    from l1_maintenance_records);


2ans)
select maintenance_type,count(*) 
from l1_maintenance_records
group by maintenance_type
order by count(*) desc
limit 1;
          

3ans)

select technician_name,count(*) as number_of_tasks,(cost/number_of_tasks) as avg_salary_per_task
from l1_maintenance_records
where monthname(maintenance_date)='march' and year(maintenance_date)='2024'
group by technician_name
order by number_of_tasks desc;



4ans)

select product_id,avg(incident_count_pre_update-incident_count_post_update)
from l2_updates
group by product_id;


5ans)

select u.product_id
from l2_updates u self join l2_updates v
group by u.product_id having u.user_feedback_score>(select user_feedback_score
                                                     from l2_updates v);




6ans)

select product_id
from l2_updates
where incident_count_pre_update-incident_count_post_update=(select min(incident_count_pre_update-									    incident_count_post_update)
                                                            from l2_updates);


7ans)

select p.patient_name,group_concat(v.reason_for_visit),group_concat(t.outcome)
from l3_patients p  join l3_visits v using(patient_id) join l3_treatments t using(visit_id)
group by p.patient_name having count(v.facility_id)>1;


8ans)

select f.facility_name,count(v.visit_id)
from l3_facilities f join l3_visits v using(facility_id)
where monthname(v.visit_date)='march'
group by f.facility_name
order by count(v.visit_id) desc
limit 1;

9ans)

select p.insurance_provider
from l3_patients p  join l3_visits v using(patient_id) join l3_treatments t using(visit_id)
where quarter(visit_date)='1' and t.outcome='complicated';

10ans)

select group_concat(p.product_name),p.category,sum(s.quantity)
from l4_products p join l4_sales s using(product_id)
where monthname(s.sale_date)='march' and year(s.sale_date)='2024'
group by p.category
order by sum(s.quantity) desc




11ans)

create view sales_analysis as(
select s.sale_id,s.product_id,s.store_id,s.sale_date,s.quantity,st.store_name,st.region
from l4_sales s join l4_stores st using(store_id));

select region
from sales_analysis
where quarter(sale_date)='1'
group by region 
order by quantity desc
limit 1;




12ans)
select p.product_name
from (l4_products p) full outer join (l4_sales s) using(product_id)
where s.sale_id is null;


select st.region
from (l4_sales s) full outer join (l4_stores) st using(store_id)
group by st.region having s.sale_id is null;
